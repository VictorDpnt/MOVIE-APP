{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/mediamovie-v2/src/components/Cards.js\";\nimport React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = ({\n  movie\n}) => {\n  const notation = Math.floor(movie.vote_average * 10);\n  const dateFormateur = date => {\n    let dateIso = new Date(date);\n    // let [yy, mm, dd] = date.split(\"-\");\n    // return [dd, mm, yy].join(\"-\");\n  };\n  function convertDate(dateString) {\n    // Tableau des noms de mois en français\n    var months = [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"];\n    var date = new Date(dateString);\n    var day = date.getDate();\n    var monthIndex = date.getMonth();\n    var year = date.getFullYear();\n    if (day < 10) {\n      day = \"0\" + day;\n    }\n    var formattedDate = day + \" \" + months[monthIndex] + \" \" + year;\n    return formattedDate;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path ? \"https://image.tmdb.org/t/p/original\" + movie.poster_path : \"./img/noimg.jpeg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notation\",\n        style: {\n          width: 35,\n          height: 35\n        },\n        background: \"#141414\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: notation,\n          text: `${notation}%`,\n          strokeWidth: 15,\n          background: \"#141414\",\n          styles: {\n            root: {\n              width: \"100%\"\n            },\n            path: {\n              stroke: notation > 66 ? \"#1ABC9C\" : notation > 33 ? \"#F39C12\" : \"#E74C3C\"\n            },\n            trail: {\n              stroke: \"#141414\"\n            },\n            text: {\n              fill: \"#141414\",\n              fontSize: \"30px\",\n              fontWeight: \"bold\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movie-title\",\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"date\",\n        children: convertDate(movie.release_date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","CircularProgressbar","jsxDEV","_jsxDEV","Cards","movie","notation","Math","floor","vote_average","dateFormateur","date","dateIso","Date","convertDate","dateString","months","day","getDate","monthIndex","getMonth","year","getFullYear","formattedDate","className","children","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","background","value","text","strokeWidth","styles","root","path","stroke","trail","fill","fontSize","fontWeight","title","release_date","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/mediamovie-v2/src/components/Cards.js"],"sourcesContent":["import React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst Cards = ({ movie }) => {\n  const notation = Math.floor(movie.vote_average * 10);\n  const dateFormateur = (date) => {\n    let dateIso = new Date(date);\n    // let [yy, mm, dd] = date.split(\"-\");\n    // return [dd, mm, yy].join(\"-\");\n  };\n\n  function convertDate(dateString) {\n    // Tableau des noms de mois en français\n    var months = [\n      \"janvier\",\n      \"février\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"août\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"décembre\",\n    ];\n\n    var date = new Date(dateString);\n\n    var day = date.getDate();\n    var monthIndex = date.getMonth();\n    var year = date.getFullYear();\n\n    if (day < 10) {\n      day = \"0\" + day;\n    }\n\n    var formattedDate = day + \" \" + months[monthIndex] + \" \" + year;\n\n    return formattedDate;\n  }\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"img\">\n        <img\n          src={\n            movie.poster_path\n              ? \"https://image.tmdb.org/t/p/original\" + movie.poster_path\n              : \"./img/noimg.jpeg\"\n          }\n          alt=\"\"\n        />\n      </div>\n      <div className=\"infos\">\n        <div\n          className=\"notation\"\n          style={{ width: 35, height: 35 }}\n          background={\"#141414\"}\n        >\n          <CircularProgressbar\n            value={notation}\n            text={`${notation}%`}\n            strokeWidth={15}\n            background={\"#141414\"}\n            styles={{\n              root: { width: \"100%\" },\n              path: {\n                stroke:\n                  notation > 66\n                    ? \"#1ABC9C\"\n                    : notation > 33\n                    ? \"#F39C12\"\n                    : \"#E74C3C\",\n              },\n              trail: {\n                stroke: \"#141414\",\n              },\n              text: {\n                fill: \"#141414\",\n                fontSize: \"30px\",\n                fontWeight: \"bold\",\n              },\n            }}\n          />\n        </div>\n        <h1 className=\"movie-title\">{movie.title}</h1>\n        <h5 className=\"date\">{convertDate(movie.release_date)}</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}