{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/mediamovie-v2/src/components/ActorsCr\\xE9dits.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport CardsFamourfor from \"./CardsFamourfor\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorsCrédits = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const idUrl = window.location.pathname;\n  const getId = id => {\n    let idSerie = id.split(\"/\")[2];\n    return idSerie;\n  };\n  const id = getId(idUrl);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/person/${id}/combined_credits?api_key=864b6602f4018630491e67fa714381e6&language=fr-FR`).then(res => setData(res.data.cast));\n  }, [data, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"C\\xE9l\\xE8bre pour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"type\",\n      children: \"Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-cards-container\",\n      children: data.filter(movie => {\n        if (movie.title) {\n          return movie;\n        } else {\n          return null;\n        }\n      }).filter(movie => {\n        if (movie.genre_ids[0] === 35 || movie.genre_ids[1] === 35) {\n          return null;\n        } else {\n          return movie;\n        }\n      }).filter(movie => {\n        if (movie.poster_path) {\n          return movie;\n        } else {\n          return null;\n        }\n      }).sort((a, b) => b.popularity - a.popularity).map((movie, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/${movie.id}`,\n        children: /*#__PURE__*/_jsxDEV(CardsFamourfor, {\n          movie: movie\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"type\",\n      children: \"S\\xE9ries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-cards-container\",\n      children: data.filter(movie => {\n        if (movie.media_type === \"tv\") {\n          return movie;\n        } else {\n          return null;\n        }\n      }).filter(movie => {\n        if (movie.poster_path) {\n          return movie;\n        } else {\n          return null;\n        }\n      }).filter(movie => {\n        if (movie.genre_ids[0] === 10763 || movie.genre_ids[1] === 10763 || movie.genre_ids[0] === 10767 || movie.genre_ids[1] === 10767) {\n          return null;\n        } else {\n          return movie;\n        }\n      }).sort((a, b) => b.popularity - a.popularity).map((movie, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/SeriesPopulaires/${movie.id}`,\n        children: /*#__PURE__*/_jsxDEV(CardsFamourfor, {\n          movie: movie\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ActorsCrédits, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ActorsCrédits;\nexport default ActorsCrédits;\nvar _c;\n$RefreshReg$(_c, \"ActorsCr\\xE9dits\");","map":{"version":3,"names":["axios","React","useEffect","useState","CardsFamourfor","NavLink","jsxDEV","_jsxDEV","ActorsCrédits","_s","data","setData","idUrl","window","location","pathname","getId","id","idSerie","split","get","then","res","cast","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","movie","title","genre_ids","poster_path","sort","a","b","popularity","map","index","to","media_type","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/mediamovie-v2/src/components/ActorsCrédits.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport CardsFamourfor from \"./CardsFamourfor\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ActorsCrédits = () => {\n  const [data, setData] = useState([]);\n  const idUrl = window.location.pathname;\n  const getId = (id) => {\n    let idSerie = id.split(\"/\")[2];\n    return idSerie;\n  };\n  const id = getId(idUrl);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/person/${id}/combined_credits?api_key=864b6602f4018630491e67fa714381e6&language=fr-FR`\n      )\n      .then((res) => setData(res.data.cast));\n  }, [data, id]);\n  return (\n    <div>\n      <h1>Célèbre pour</h1>\n      <h3 className=\"type\">Films</h3>\n      <div className=\"mini-cards-container\">\n        {data\n          .filter((movie) => {\n            if (movie.title) {\n              return movie;\n            } else {\n              return null;\n            }\n          })\n          .filter((movie) => {\n            if (movie.genre_ids[0] === 35 || movie.genre_ids[1] === 35) {\n              return null;\n            } else {\n              return movie;\n            }\n          })\n          .filter((movie) => {\n            if (movie.poster_path) {\n              return movie;\n            } else {\n              return null;\n            }\n          })\n          .sort((a, b) => b.popularity - a.popularity)\n          .map((movie, index) => (\n            <NavLink to={`/${movie.id}`}>\n              <CardsFamourfor key={index} movie={movie} />\n            </NavLink>\n          ))}\n      </div>\n      <h3 className=\"type\">Séries</h3>\n      <div className=\"mini-cards-container\">\n        {data\n          .filter((movie) => {\n            if (movie.media_type === \"tv\") {\n              return movie;\n            } else {\n              return null;\n            }\n          })\n          .filter((movie) => {\n            if (movie.poster_path) {\n              return movie;\n            } else {\n              return null;\n            }\n          })\n          .filter((movie) => {\n            if (\n              movie.genre_ids[0] === 10763 ||\n              movie.genre_ids[1] === 10763 ||\n              movie.genre_ids[0] === 10767 ||\n              movie.genre_ids[1] === 10767\n            ) {\n              return null;\n            } else {\n              return movie;\n            }\n          })\n          .sort((a, b) => b.popularity - a.popularity)\n          .map((movie, index) => (\n            <NavLink to={`/SeriesPopulaires/${movie.id}`}>\n              <CardsFamourfor key={index} movie={movie} />\n            </NavLink>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ActorsCrédits;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}