{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Navbar from\"../../components/Navbar\";import axios from\"axios\";import CardsActors from\"../../components/CardsActors\";import{NavLink}from\"react-router-dom\";import InfiniteScroll from\"react-infinite-scroll-component\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ArtistesPopulaires=()=>{const[data,setData]=useState([]);const[pageNumber,setPageNumber]=useState(1);useEffect(()=>{axios.get(\"https://api.themoviedb.org/3/person/popular?api_key=864b6602f4018630491e67fa714381e6&page=\".concat(pageNumber,\"&language=fr-FR\")).then(res=>setData(res.data.results));},[]);const fetchData=()=>{setPageNumber(pageNumber+1);axios.get(\"https://api.themoviedb.org/3/person/popular?api_key=864b6602f4018630491e67fa714381e6&page=\".concat(pageNumber,\"&language=fr-FR\")).then(res=>setData(data.concat(res.data.results)));};return/*#__PURE__*/_jsxs(\"div\",{className:\"now-playing\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"popular-container-actors\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"cards-container-actors\",children:[data.filter((item,index)=>{return index===data.findIndex(item2=>item2.id===item.id);}).map((actor,index)=>/*#__PURE__*/_jsx(NavLink,{to:\"/ActeursPopulaires/\".concat(actor.id),children:/*#__PURE__*/_jsx(CardsActors,{actor:actor},index)})),/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:data.length,next:fetchData,hasMore:true,loader:/*#__PURE__*/_jsx(\"h4\",{children:\"Scroll...\"})})]})})]});};export default ArtistesPopulaires;","map":{"version":3,"names":["React","useEffect","useState","Navbar","axios","CardsActors","NavLink","InfiniteScroll","jsx","_jsx","jsxs","_jsxs","ArtistesPopulaires","data","setData","pageNumber","setPageNumber","get","concat","then","res","results","fetchData","className","children","filter","item","index","findIndex","item2","id","map","actor","to","dataLength","length","next","hasMore","loader"],"sources":["/Users/victor/Documents/GitHub/MOVIE-APP/src/pages/Artistes/ArtistesPopulaires.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport axios from \"axios\";\nimport CardsActors from \"../../components/CardsActors\";\nimport { NavLink } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst ArtistesPopulaires = () => {\n  const [data, setData] = useState([]);\n\n  const [pageNumber, setPageNumber] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/person/popular?api_key=864b6602f4018630491e67fa714381e6&page=${pageNumber}&language=fr-FR`\n      )\n      .then((res) => setData(res.data.results));\n  }, []);\n\n  const fetchData = () => {\n    setPageNumber(pageNumber + 1);\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/person/popular?api_key=864b6602f4018630491e67fa714381e6&page=${pageNumber}&language=fr-FR`\n      )\n      .then((res) => setData(data.concat(res.data.results)));\n  };\n  return (\n    <div className=\"now-playing\">\n      <Navbar />\n      <div className=\"popular-container-actors\">\n        <div className=\"cards-container-actors\">\n          {data\n            .filter((item, index) => {\n              return index === data.findIndex((item2) => item2.id === item.id);\n            })\n            .map((actor, index) => (\n              <NavLink to={`/ActeursPopulaires/${actor.id}`}>\n                <CardsActors key={index} actor={actor} />\n              </NavLink>\n            ))}\n          <InfiniteScroll\n            dataLength={data.length}\n            next={fetchData}\n            hasMore={true}\n            loader={<h4>Scroll...</h4>}\n          ></InfiniteScroll>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArtistesPopulaires;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,yBAAyB,CAC5C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,8BAA8B,CACtD,OAASC,OAAO,KAAQ,kBAAkB,CAC1C,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7D,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAE/CD,SAAS,CAAC,IAAM,CACdG,KAAK,CACFa,GAAG,8FAAAC,MAAA,CAC2FH,UAAU,mBACzG,CAAC,CACAI,IAAI,CAAEC,GAAG,EAAKN,OAAO,CAACM,GAAG,CAACP,IAAI,CAACQ,OAAO,CAAC,CAAC,CAC7C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtBN,aAAa,CAACD,UAAU,CAAG,CAAC,CAAC,CAE7BX,KAAK,CACFa,GAAG,8FAAAC,MAAA,CAC2FH,UAAU,mBACzG,CAAC,CACAI,IAAI,CAAEC,GAAG,EAAKN,OAAO,CAACD,IAAI,CAACK,MAAM,CAACE,GAAG,CAACP,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAC1D,CAAC,CACD,mBACEV,KAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1Bf,IAAA,CAACN,MAAM,GAAE,CAAC,cACVM,IAAA,QAAKc,SAAS,CAAC,0BAA0B,CAAAC,QAAA,cACvCb,KAAA,QAAKY,SAAS,CAAC,wBAAwB,CAAAC,QAAA,EACpCX,IAAI,CACFY,MAAM,CAAC,CAACC,IAAI,CAAEC,KAAK,GAAK,CACvB,MAAO,CAAAA,KAAK,GAAKd,IAAI,CAACe,SAAS,CAAEC,KAAK,EAAKA,KAAK,CAACC,EAAE,GAAKJ,IAAI,CAACI,EAAE,CAAC,CAClE,CAAC,CAAC,CACDC,GAAG,CAAC,CAACC,KAAK,CAAEL,KAAK,gBAChBlB,IAAA,CAACH,OAAO,EAAC2B,EAAE,uBAAAf,MAAA,CAAwBc,KAAK,CAACF,EAAE,CAAG,CAAAN,QAAA,cAC5Cf,IAAA,CAACJ,WAAW,EAAa2B,KAAK,CAAEA,KAAM,EAApBL,KAAsB,CAAC,CAClC,CACV,CAAC,cACJlB,IAAA,CAACF,cAAc,EACb2B,UAAU,CAAErB,IAAI,CAACsB,MAAO,CACxBC,IAAI,CAAEd,SAAU,CAChBe,OAAO,CAAE,IAAK,CACdC,MAAM,cAAE7B,IAAA,OAAAe,QAAA,CAAI,WAAS,CAAI,CAAE,CACZ,CAAC,EACf,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAZ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}