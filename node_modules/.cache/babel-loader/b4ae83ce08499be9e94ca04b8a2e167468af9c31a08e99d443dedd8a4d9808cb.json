{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/mediamovie-v2/src/components/CardsSeries.js\";\nimport React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsSeries = ({\n  movie\n}) => {\n  const notation = Math.floor(movie.vote_average * 10);\n  function convertDate(dateString) {\n    // Tableau des noms de mois en français\n    var months = [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"];\n\n    // Créer un objet Date à partir de la chaîne de caractères\n    var date = new Date(dateString);\n\n    // Obtenir les éléments de date individuels\n    var day = date.getDate();\n    var monthIndex = date.getMonth(); // Obtenir l'index du mois\n    var year = date.getFullYear();\n\n    // Formatage des éléments de date pour avoir deux chiffres\n    if (day < 10) {\n      day = \"0\" + day;\n    }\n\n    // Création de la chaîne de caractères de date formatée\n    var formattedDate = day + \" \" + months[monthIndex] + \" \" + year;\n\n    // Retourner la date formatée\n    return formattedDate;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://image.tmdb.org/t/p/original\" + movie.poster_path,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notation\",\n        style: {\n          width: 35,\n          height: 35\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: notation,\n          text: `${notation}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movie-title\",\n        children: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"date\",\n        children: convertDate(movie.first_air_date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = CardsSeries;\nexport default CardsSeries;\nvar _c;\n$RefreshReg$(_c, \"CardsSeries\");","map":{"version":3,"names":["React","CircularProgressbar","jsxDEV","_jsxDEV","CardsSeries","movie","notation","Math","floor","vote_average","convertDate","dateString","months","date","Date","day","getDate","monthIndex","getMonth","year","getFullYear","formattedDate","className","children","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","value","text","name","first_air_date","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/mediamovie-v2/src/components/CardsSeries.js"],"sourcesContent":["import React from \"react\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst CardsSeries = ({ movie }) => {\n  const notation = Math.floor(movie.vote_average * 10);\n\n  function convertDate(dateString) {\n    // Tableau des noms de mois en français\n    var months = [\n      \"janvier\",\n      \"février\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"août\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"décembre\",\n    ];\n\n    // Créer un objet Date à partir de la chaîne de caractères\n    var date = new Date(dateString);\n\n    // Obtenir les éléments de date individuels\n    var day = date.getDate();\n    var monthIndex = date.getMonth(); // Obtenir l'index du mois\n    var year = date.getFullYear();\n\n    // Formatage des éléments de date pour avoir deux chiffres\n    if (day < 10) {\n      day = \"0\" + day;\n    }\n\n    // Création de la chaîne de caractères de date formatée\n    var formattedDate = day + \" \" + months[monthIndex] + \" \" + year;\n\n    // Retourner la date formatée\n    return formattedDate;\n  }\n\n  return (\n    <div className=\"card-container\">\n      <div className=\"img\">\n        <img\n          src={\"https://image.tmdb.org/t/p/original\" + movie.poster_path}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"infos\">\n        <div className=\"notation\" style={{ width: 35, height: 35 }}>\n          <CircularProgressbar value={notation} text={`${notation}%`} />\n        </div>\n        <h1 className=\"movie-title\">{movie.name}</h1>\n        <h5 className=\"date\">{convertDate(movie.first_air_date)}</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default CardsSeries;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,YAAY,GAAG,EAAE,CAAC;EAEpD,SAASC,WAAWA,CAACC,UAAU,EAAE;IAC/B;IACA,IAAIC,MAAM,GAAG,CACX,SAAS,EACT,SAAS,EACT,MAAM,EACN,OAAO,EACP,KAAK,EACL,MAAM,EACN,SAAS,EACT,MAAM,EACN,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;;IAED;IACA,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,UAAU,CAAC;;IAE/B;IACA,IAAII,GAAG,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC;IACxB,IAAIC,UAAU,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClC,IAAIC,IAAI,GAAGN,IAAI,CAACO,WAAW,CAAC,CAAC;;IAE7B;IACA,IAAIL,GAAG,GAAG,EAAE,EAAE;MACZA,GAAG,GAAG,GAAG,GAAGA,GAAG;IACjB;;IAEA;IACA,IAAIM,aAAa,GAAGN,GAAG,GAAG,GAAG,GAAGH,MAAM,CAACK,UAAU,CAAC,GAAG,GAAG,GAAGE,IAAI;;IAE/D;IACA,OAAOE,aAAa;EACtB;EAEA,oBACElB,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBpB,OAAA;QACEqB,GAAG,EAAE,qCAAqC,GAAGnB,KAAK,CAACoB,WAAY;QAC/DC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3B,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBpB,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAACS,KAAK,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAAV,QAAA,eACzDpB,OAAA,CAACF,mBAAmB;UAACiC,KAAK,EAAE5B,QAAS;UAAC6B,IAAI,EAAG,GAAE7B,QAAS;QAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACN3B,OAAA;QAAImB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAElB,KAAK,CAAC+B;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7C3B,OAAA;QAAImB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEb,WAAW,CAACL,KAAK,CAACgC,cAAc;MAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACQ,EAAA,GAzDIlC,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}