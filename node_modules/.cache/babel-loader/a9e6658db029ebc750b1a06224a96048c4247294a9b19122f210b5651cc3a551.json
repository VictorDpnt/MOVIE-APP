{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/mediamovie-v2/src/components/SearchWindow.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchWindow = ({\n  inputSearch\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const mediaGenre = genre => {\n    let genreMedia = \"\";\n    if (genre === \"tv\") {\n      genreMedia = \"Série\";\n    } else if (genre === \"movie\") {\n      genreMedia = \"Film\";\n    } else {\n      genreMedia = \"Acteur\";\n    }\n    return genreMedia;\n  };\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString().slice(-2);\n    return `${day}-${month}-${year}`;\n  }\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/search/multi?api_key=864b6602f4018630491e67fa714381e6&query=${inputSearch}&page=1&language=fr-FR`).then(res => setData(res.data.results));\n  }, [data, inputSearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"window-containt\",\n    children: data.sort((a, b) => b.popularity - a.popularity).map((movie, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n      to: movie.media_type === \"movie\" ? `/${movie.id}` : movie.media_type === \"tv\" ? `/SeriesPopulaires/${movie.id}` : `/ActeursPopulaires/${movie.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.media_type === \"movie\" ? movie.title : movie.media_type === \"tv\" ? movie.name : movie.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: mediaGenre(movie.media_type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), movie.release_date ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: formatDate(movie.release_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this) : movie.first_air_date ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: formatDate(movie.first_air_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["axios","React","useEffect","useState","NavLink","jsxDEV","_jsxDEV","SearchWindow","inputSearch","_s","data","setData","mediaGenre","genre","genreMedia","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","get","then","res","results","className","children","sort","a","b","popularity","map","movie","index","to","media_type","id","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","release_date","first_air_date","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/mediamovie-v2/src/components/SearchWindow.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SearchWindow = ({ inputSearch }) => {\n  const [data, setData] = useState([]);\n\n  const mediaGenre = (genre) => {\n    let genreMedia = \"\";\n    if (genre === \"tv\") {\n      genreMedia = \"Série\";\n    } else if (genre === \"movie\") {\n      genreMedia = \"Film\";\n    } else {\n      genreMedia = \"Acteur\";\n    }\n    return genreMedia;\n  };\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString().slice(-2);\n\n    return `${day}-${month}-${year}`;\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/multi?api_key=864b6602f4018630491e67fa714381e6&query=${inputSearch}&page=1&language=fr-FR`\n      )\n      .then((res) => setData(res.data.results));\n  }, [data, inputSearch]);\n\n  return (\n    <div className=\"window-containt\">\n      {data\n        .sort((a, b) => b.popularity - a.popularity)\n        .map((movie, index) => (\n          <NavLink\n            to={\n              movie.media_type === \"movie\"\n                ? `/${movie.id}`\n                : movie.media_type === \"tv\"\n                ? `/SeriesPopulaires/${movie.id}`\n                : `/ActeursPopulaires/${movie.id}`\n            }\n          >\n            <div key={index} className=\"results\">\n              <li>\n                {movie.media_type === \"movie\"\n                  ? movie.title\n                  : movie.media_type === \"tv\"\n                  ? movie.name\n                  : movie.original_name}\n              </li>\n\n              <div className=\"details-search\">\n                <p>{mediaGenre(movie.media_type)}</p>\n                {movie.release_date ? (\n                  <p className=\"date\">{formatDate(movie.release_date)}</p>\n                ) : movie.first_air_date ? (\n                  <p className=\"date\">{formatDate(movie.first_air_date)}</p>\n                ) : null}\n              </div>\n            </div>\n          </NavLink>\n        ))}\n    </div>\n  );\n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}