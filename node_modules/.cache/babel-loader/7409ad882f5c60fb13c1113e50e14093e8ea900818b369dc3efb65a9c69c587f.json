{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/mediamovie-v2/src/components/ProvidersSeries.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProvidersSeries = ({\n  movieTitle,\n  movieId\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [countryChoice, setCountryChoice] = useState(\"FR\");\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/tv/${movieId && movieId}/watch/providers?api_key=864b6602f4018630491e67fa714381e6&language=fr-FR`).then(res => setData(res.data.results[countryChoice]));\n  }, [countryChoice, movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"providers-containt\",\n    children: [data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"provider\",\n      children: [data.free && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"type\",\n        children: \"En visionnage gratuit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), data.free && data.free.map((provider, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://image.tmdb.org/t/p/original\" + provider.logo_path,\n        alt: \"\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : null, data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"provider\",\n      children: [data.flatrate && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"type\",\n        children: \"En streaming avec abonnement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), data.flatrate && data.flatrate.map((provider, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://image.tmdb.org/t/p/original\" + provider.logo_path,\n        alt: \"\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : null, data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"provider\",\n      children: [data.buy && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"type\",\n        children: \"\\xC0 l'achat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this), data.buy && data.buy.map((provider, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://image.tmdb.org/t/p/original\" + provider.logo_path,\n        alt: \"\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ProvidersSeries, \"0i4mLkyjWc6yQ3TThxoSu8sfXvk=\");\n_c = ProvidersSeries;\nexport default ProvidersSeries;\nvar _c;\n$RefreshReg$(_c, \"ProvidersSeries\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","ProvidersSeries","movieTitle","movieId","_s","data","setData","countryChoice","setCountryChoice","get","then","res","results","className","children","free","fileName","_jsxFileName","lineNumber","columnNumber","map","provider","index","src","logo_path","alt","flatrate","buy","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/mediamovie-v2/src/components/ProvidersSeries.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ProvidersSeries = ({ movieTitle, movieId }) => {\n  const [data, setData] = useState([]);\n  const [countryChoice, setCountryChoice] = useState(\"FR\");\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/tv/${\n          movieId && movieId\n        }/watch/providers?api_key=864b6602f4018630491e67fa714381e6&language=fr-FR`\n      )\n      .then((res) => setData(res.data.results[countryChoice]));\n  }, [countryChoice, movieId]);\n\n  return (\n    <div className=\"providers-containt\">\n      {data ? (\n        <div className=\"provider\">\n          {data.free && <h3 className=\"type\">En visionnage gratuit</h3>}\n          {data.free &&\n            data.free.map((provider, index) => (\n              <img\n                src={\"https://image.tmdb.org/t/p/original\" + provider.logo_path}\n                alt=\"\"\n                key={index}\n              />\n            ))}\n        </div>\n      ) : null}\n\n      {data ? (\n        <div className=\"provider\">\n          {data.flatrate && (\n            <h3 className=\"type\">En streaming avec abonnement</h3>\n          )}\n          {data.flatrate &&\n            data.flatrate.map((provider, index) => (\n              <img\n                src={\"https://image.tmdb.org/t/p/original\" + provider.logo_path}\n                alt=\"\"\n                key={index}\n              />\n            ))}\n        </div>\n      ) : null}\n\n      {data ? (\n        <div className=\"provider\">\n          {data.buy && <h3 className=\"type\">Ã€ l'achat</h3>}\n          {data.buy &&\n            data.buy.map((provider, index) => (\n              <img\n                src={\"https://image.tmdb.org/t/p/original\" + provider.logo_path}\n                alt=\"\"\n                key={index}\n              />\n            ))}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ProvidersSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}