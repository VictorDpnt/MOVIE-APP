{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/mediamovie-v2/src/components/SearchWindow.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchWindow = ({\n  inputSearch\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const mediaGenre = genre => {\n    let genreMedia = \"\";\n    if (genre === \"tv\") {\n      genreMedia = \"Série\";\n    } else if (genre === \"movie\") {\n      genreMedia = \"Film\";\n    }\n    return genreMedia;\n  };\n  const getData = date => {\n    let newDate = date.split(\"-\");\n    return newDate;\n  };\n  console.log(getData(\"2018-01-17\"));\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/search/multi?api_key=864b6602f4018630491e67fa714381e6&query=${inputSearch}&page=1&language=fr-FR`).then(res => setData(res.data.results));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"window-containt\",\n    children: data.map((movie, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n      to: movie.title ? `/${movie.id}` : `/SeriesPopulaires/${movie.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.title ? movie.title : movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tiret\",\n            children: \" - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mediaGenre(movie.media_type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), movie.release_date ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"-\", movie.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"-\", movie.first_air_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchWindow, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = SearchWindow;\nexport default SearchWindow;\nvar _c;\n$RefreshReg$(_c, \"SearchWindow\");","map":{"version":3,"names":["axios","React","useEffect","useState","NavLink","jsxDEV","_jsxDEV","SearchWindow","inputSearch","_s","data","setData","mediaGenre","genre","genreMedia","getData","date","newDate","split","console","log","get","then","res","results","className","children","map","movie","index","to","title","id","name","fileName","_jsxFileName","lineNumber","columnNumber","media_type","release_date","first_air_date","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/mediamovie-v2/src/components/SearchWindow.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SearchWindow = ({ inputSearch }) => {\n  const [data, setData] = useState([]);\n\n  const mediaGenre = (genre) => {\n    let genreMedia = \"\";\n    if (genre === \"tv\") {\n      genreMedia = \"Série\";\n    } else if (genre === \"movie\") {\n      genreMedia = \"Film\";\n    }\n    return genreMedia;\n  };\n\n  const getData = (date) => {\n    let newDate = date.split(\"-\");\n\n    return newDate;\n  };\n\n  console.log(getData(\"2018-01-17\"));\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/multi?api_key=864b6602f4018630491e67fa714381e6&query=${inputSearch}&page=1&language=fr-FR`\n      )\n      .then((res) => setData(res.data.results));\n  }, [data]);\n  return (\n    <div className=\"window-containt\">\n      {data.map((movie, index) => (\n        <NavLink\n          to={movie.title ? `/${movie.id}` : `/SeriesPopulaires/${movie.id}`}\n        >\n          <div key={index} className=\"results\">\n            <li>{movie.title ? movie.title : movie.name}</li>\n            <div>\n              <p className=\"tiret\"> - </p>\n              <p>{mediaGenre(movie.media_type)}</p>\n              {movie.release_date ? (\n                <p>-{movie.release_date}</p>\n              ) : (\n                <p>-{movie.first_air_date}</p>\n              )}\n            </div>\n          </div>\n        </NavLink>\n      ))}\n    </div>\n  );\n};\n\nexport default SearchWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}